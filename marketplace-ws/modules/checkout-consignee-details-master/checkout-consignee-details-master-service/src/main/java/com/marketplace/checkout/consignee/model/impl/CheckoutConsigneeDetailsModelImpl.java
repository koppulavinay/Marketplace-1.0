/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.marketplace.checkout.consignee.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.marketplace.checkout.consignee.model.CheckoutConsigneeDetails;
import com.marketplace.checkout.consignee.model.CheckoutConsigneeDetailsModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the CheckoutConsigneeDetails service. Represents a row in the &quot;marketplace_consigneedetails&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>CheckoutConsigneeDetailsModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CheckoutConsigneeDetailsImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CheckoutConsigneeDetailsImpl
 * @generated
 */
@JSON(strict = true)
public class CheckoutConsigneeDetailsModelImpl
	extends BaseModelImpl<CheckoutConsigneeDetails>
	implements CheckoutConsigneeDetailsModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a checkout consignee details model instance should use the <code>CheckoutConsigneeDetails</code> interface instead.
	 */
	public static final String TABLE_NAME = "marketplace_consigneedetails";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"checkoutConsigneeId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createdBy", Types.BIGINT}, {"modifiedBy", Types.BIGINT},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"parentCartId", Types.BIGINT}, {"orderItemId", Types.BIGINT},
		{"shippingConsigneeId", Types.VARCHAR},
		{"shipConsigneeJson", Types.VARCHAR},
		{"shipConsigneeAddressID", Types.VARCHAR},
		{"shipConsigneeAddressJson", Types.VARCHAR},
		{"billingConsigneeId", Types.VARCHAR},
		{"billConsigneeJson", Types.VARCHAR},
		{"billConsigneeAddressId", Types.VARCHAR},
		{"billConsigneeAddressJson", Types.VARCHAR}, {"quantity", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("checkoutConsigneeId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createdBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("parentCartId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("orderItemId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("shippingConsigneeId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("shipConsigneeJson", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("shipConsigneeAddressID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("shipConsigneeAddressJson", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("billingConsigneeId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("billConsigneeJson", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("billConsigneeAddressId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("billConsigneeAddressJson", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("quantity", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table marketplace_consigneedetails (uuid_ VARCHAR(75) null,checkoutConsigneeId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createdBy LONG,modifiedBy LONG,createDate DATE null,modifiedDate DATE null,parentCartId LONG,orderItemId LONG,shippingConsigneeId VARCHAR(75) null,shipConsigneeJson STRING null,shipConsigneeAddressID VARCHAR(75) null,shipConsigneeAddressJson STRING null,billingConsigneeId VARCHAR(75) null,billConsigneeJson STRING null,billConsigneeAddressId VARCHAR(75) null,billConsigneeAddressJson STRING null,quantity LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table marketplace_consigneedetails";

	public static final String ORDER_BY_JPQL =
		" ORDER BY checkoutConsigneeDetails.checkoutConsigneeId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY marketplace_consigneedetails.checkoutConsigneeId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ORDERITEMID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PARENTCARTID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CHECKOUTCONSIGNEEID_COLUMN_BITMASK = 32L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public CheckoutConsigneeDetailsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _checkoutConsigneeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCheckoutConsigneeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _checkoutConsigneeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CheckoutConsigneeDetails.class;
	}

	@Override
	public String getModelClassName() {
		return CheckoutConsigneeDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<CheckoutConsigneeDetails, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<CheckoutConsigneeDetails, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CheckoutConsigneeDetails, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((CheckoutConsigneeDetails)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<CheckoutConsigneeDetails, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<CheckoutConsigneeDetails, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(CheckoutConsigneeDetails)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<CheckoutConsigneeDetails, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<CheckoutConsigneeDetails, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<CheckoutConsigneeDetails, Object>>
		_attributeGetterFunctions;
	private static final Map
		<String, BiConsumer<CheckoutConsigneeDetails, Object>>
			_attributeSetterBiConsumers;

	static {
		Map<String, Function<CheckoutConsigneeDetails, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<CheckoutConsigneeDetails, Object>>();
		Map<String, BiConsumer<CheckoutConsigneeDetails, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap
					<String, BiConsumer<CheckoutConsigneeDetails, ?>>();

		attributeGetterFunctions.put("uuid", CheckoutConsigneeDetails::getUuid);
		attributeSetterBiConsumers.put(
			"uuid",
			(BiConsumer<CheckoutConsigneeDetails, String>)
				CheckoutConsigneeDetails::setUuid);
		attributeGetterFunctions.put(
			"checkoutConsigneeId",
			CheckoutConsigneeDetails::getCheckoutConsigneeId);
		attributeSetterBiConsumers.put(
			"checkoutConsigneeId",
			(BiConsumer<CheckoutConsigneeDetails, Long>)
				CheckoutConsigneeDetails::setCheckoutConsigneeId);
		attributeGetterFunctions.put(
			"groupId", CheckoutConsigneeDetails::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<CheckoutConsigneeDetails, Long>)
				CheckoutConsigneeDetails::setGroupId);
		attributeGetterFunctions.put(
			"companyId", CheckoutConsigneeDetails::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<CheckoutConsigneeDetails, Long>)
				CheckoutConsigneeDetails::setCompanyId);
		attributeGetterFunctions.put(
			"userId", CheckoutConsigneeDetails::getUserId);
		attributeSetterBiConsumers.put(
			"userId",
			(BiConsumer<CheckoutConsigneeDetails, Long>)
				CheckoutConsigneeDetails::setUserId);
		attributeGetterFunctions.put(
			"userName", CheckoutConsigneeDetails::getUserName);
		attributeSetterBiConsumers.put(
			"userName",
			(BiConsumer<CheckoutConsigneeDetails, String>)
				CheckoutConsigneeDetails::setUserName);
		attributeGetterFunctions.put(
			"createdBy", CheckoutConsigneeDetails::getCreatedBy);
		attributeSetterBiConsumers.put(
			"createdBy",
			(BiConsumer<CheckoutConsigneeDetails, Long>)
				CheckoutConsigneeDetails::setCreatedBy);
		attributeGetterFunctions.put(
			"modifiedBy", CheckoutConsigneeDetails::getModifiedBy);
		attributeSetterBiConsumers.put(
			"modifiedBy",
			(BiConsumer<CheckoutConsigneeDetails, Long>)
				CheckoutConsigneeDetails::setModifiedBy);
		attributeGetterFunctions.put(
			"createDate", CheckoutConsigneeDetails::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<CheckoutConsigneeDetails, Date>)
				CheckoutConsigneeDetails::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", CheckoutConsigneeDetails::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<CheckoutConsigneeDetails, Date>)
				CheckoutConsigneeDetails::setModifiedDate);
		attributeGetterFunctions.put(
			"parentCartId", CheckoutConsigneeDetails::getParentCartId);
		attributeSetterBiConsumers.put(
			"parentCartId",
			(BiConsumer<CheckoutConsigneeDetails, Long>)
				CheckoutConsigneeDetails::setParentCartId);
		attributeGetterFunctions.put(
			"orderItemId", CheckoutConsigneeDetails::getOrderItemId);
		attributeSetterBiConsumers.put(
			"orderItemId",
			(BiConsumer<CheckoutConsigneeDetails, Long>)
				CheckoutConsigneeDetails::setOrderItemId);
		attributeGetterFunctions.put(
			"shippingConsigneeId",
			CheckoutConsigneeDetails::getShippingConsigneeId);
		attributeSetterBiConsumers.put(
			"shippingConsigneeId",
			(BiConsumer<CheckoutConsigneeDetails, String>)
				CheckoutConsigneeDetails::setShippingConsigneeId);
		attributeGetterFunctions.put(
			"shipConsigneeJson",
			CheckoutConsigneeDetails::getShipConsigneeJson);
		attributeSetterBiConsumers.put(
			"shipConsigneeJson",
			(BiConsumer<CheckoutConsigneeDetails, String>)
				CheckoutConsigneeDetails::setShipConsigneeJson);
		attributeGetterFunctions.put(
			"shipConsigneeAddressID",
			CheckoutConsigneeDetails::getShipConsigneeAddressID);
		attributeSetterBiConsumers.put(
			"shipConsigneeAddressID",
			(BiConsumer<CheckoutConsigneeDetails, String>)
				CheckoutConsigneeDetails::setShipConsigneeAddressID);
		attributeGetterFunctions.put(
			"shipConsigneeAddressJson",
			CheckoutConsigneeDetails::getShipConsigneeAddressJson);
		attributeSetterBiConsumers.put(
			"shipConsigneeAddressJson",
			(BiConsumer<CheckoutConsigneeDetails, String>)
				CheckoutConsigneeDetails::setShipConsigneeAddressJson);
		attributeGetterFunctions.put(
			"billingConsigneeId",
			CheckoutConsigneeDetails::getBillingConsigneeId);
		attributeSetterBiConsumers.put(
			"billingConsigneeId",
			(BiConsumer<CheckoutConsigneeDetails, String>)
				CheckoutConsigneeDetails::setBillingConsigneeId);
		attributeGetterFunctions.put(
			"billConsigneeJson",
			CheckoutConsigneeDetails::getBillConsigneeJson);
		attributeSetterBiConsumers.put(
			"billConsigneeJson",
			(BiConsumer<CheckoutConsigneeDetails, String>)
				CheckoutConsigneeDetails::setBillConsigneeJson);
		attributeGetterFunctions.put(
			"billConsigneeAddressId",
			CheckoutConsigneeDetails::getBillConsigneeAddressId);
		attributeSetterBiConsumers.put(
			"billConsigneeAddressId",
			(BiConsumer<CheckoutConsigneeDetails, String>)
				CheckoutConsigneeDetails::setBillConsigneeAddressId);
		attributeGetterFunctions.put(
			"billConsigneeAddressJson",
			CheckoutConsigneeDetails::getBillConsigneeAddressJson);
		attributeSetterBiConsumers.put(
			"billConsigneeAddressJson",
			(BiConsumer<CheckoutConsigneeDetails, String>)
				CheckoutConsigneeDetails::setBillConsigneeAddressJson);
		attributeGetterFunctions.put(
			"quantity", CheckoutConsigneeDetails::getQuantity);
		attributeSetterBiConsumers.put(
			"quantity",
			(BiConsumer<CheckoutConsigneeDetails, Long>)
				CheckoutConsigneeDetails::setQuantity);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getCheckoutConsigneeId() {
		return _checkoutConsigneeId;
	}

	@Override
	public void setCheckoutConsigneeId(long checkoutConsigneeId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_checkoutConsigneeId = checkoutConsigneeId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public long getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(long createdBy) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createdBy = createdBy;
	}

	@JSON
	@Override
	public long getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(long modifiedBy) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedBy = modifiedBy;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getParentCartId() {
		return _parentCartId;
	}

	@Override
	public void setParentCartId(long parentCartId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_parentCartId = parentCartId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalParentCartId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("parentCartId"));
	}

	@JSON
	@Override
	public long getOrderItemId() {
		return _orderItemId;
	}

	@Override
	public void setOrderItemId(long orderItemId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_orderItemId = orderItemId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalOrderItemId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("orderItemId"));
	}

	@JSON
	@Override
	public String getShippingConsigneeId() {
		if (_shippingConsigneeId == null) {
			return "";
		}
		else {
			return _shippingConsigneeId;
		}
	}

	@Override
	public void setShippingConsigneeId(String shippingConsigneeId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_shippingConsigneeId = shippingConsigneeId;
	}

	@JSON
	@Override
	public String getShipConsigneeJson() {
		if (_shipConsigneeJson == null) {
			return "";
		}
		else {
			return _shipConsigneeJson;
		}
	}

	@Override
	public void setShipConsigneeJson(String shipConsigneeJson) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_shipConsigneeJson = shipConsigneeJson;
	}

	@JSON
	@Override
	public String getShipConsigneeAddressID() {
		if (_shipConsigneeAddressID == null) {
			return "";
		}
		else {
			return _shipConsigneeAddressID;
		}
	}

	@Override
	public void setShipConsigneeAddressID(String shipConsigneeAddressID) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_shipConsigneeAddressID = shipConsigneeAddressID;
	}

	@JSON
	@Override
	public String getShipConsigneeAddressJson() {
		if (_shipConsigneeAddressJson == null) {
			return "";
		}
		else {
			return _shipConsigneeAddressJson;
		}
	}

	@Override
	public void setShipConsigneeAddressJson(String shipConsigneeAddressJson) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_shipConsigneeAddressJson = shipConsigneeAddressJson;
	}

	@JSON
	@Override
	public String getBillingConsigneeId() {
		if (_billingConsigneeId == null) {
			return "";
		}
		else {
			return _billingConsigneeId;
		}
	}

	@Override
	public void setBillingConsigneeId(String billingConsigneeId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_billingConsigneeId = billingConsigneeId;
	}

	@JSON
	@Override
	public String getBillConsigneeJson() {
		if (_billConsigneeJson == null) {
			return "";
		}
		else {
			return _billConsigneeJson;
		}
	}

	@Override
	public void setBillConsigneeJson(String billConsigneeJson) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_billConsigneeJson = billConsigneeJson;
	}

	@JSON
	@Override
	public String getBillConsigneeAddressId() {
		if (_billConsigneeAddressId == null) {
			return "";
		}
		else {
			return _billConsigneeAddressId;
		}
	}

	@Override
	public void setBillConsigneeAddressId(String billConsigneeAddressId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_billConsigneeAddressId = billConsigneeAddressId;
	}

	@JSON
	@Override
	public String getBillConsigneeAddressJson() {
		if (_billConsigneeAddressJson == null) {
			return "";
		}
		else {
			return _billConsigneeAddressJson;
		}
	}

	@Override
	public void setBillConsigneeAddressJson(String billConsigneeAddressJson) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_billConsigneeAddressJson = billConsigneeAddressJson;
	}

	@JSON
	@Override
	public long getQuantity() {
		return _quantity;
	}

	@Override
	public void setQuantity(long quantity) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_quantity = quantity;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(
				CheckoutConsigneeDetails.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), CheckoutConsigneeDetails.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CheckoutConsigneeDetails toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, CheckoutConsigneeDetails>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CheckoutConsigneeDetailsImpl checkoutConsigneeDetailsImpl =
			new CheckoutConsigneeDetailsImpl();

		checkoutConsigneeDetailsImpl.setUuid(getUuid());
		checkoutConsigneeDetailsImpl.setCheckoutConsigneeId(
			getCheckoutConsigneeId());
		checkoutConsigneeDetailsImpl.setGroupId(getGroupId());
		checkoutConsigneeDetailsImpl.setCompanyId(getCompanyId());
		checkoutConsigneeDetailsImpl.setUserId(getUserId());
		checkoutConsigneeDetailsImpl.setUserName(getUserName());
		checkoutConsigneeDetailsImpl.setCreatedBy(getCreatedBy());
		checkoutConsigneeDetailsImpl.setModifiedBy(getModifiedBy());
		checkoutConsigneeDetailsImpl.setCreateDate(getCreateDate());
		checkoutConsigneeDetailsImpl.setModifiedDate(getModifiedDate());
		checkoutConsigneeDetailsImpl.setParentCartId(getParentCartId());
		checkoutConsigneeDetailsImpl.setOrderItemId(getOrderItemId());
		checkoutConsigneeDetailsImpl.setShippingConsigneeId(
			getShippingConsigneeId());
		checkoutConsigneeDetailsImpl.setShipConsigneeJson(
			getShipConsigneeJson());
		checkoutConsigneeDetailsImpl.setShipConsigneeAddressID(
			getShipConsigneeAddressID());
		checkoutConsigneeDetailsImpl.setShipConsigneeAddressJson(
			getShipConsigneeAddressJson());
		checkoutConsigneeDetailsImpl.setBillingConsigneeId(
			getBillingConsigneeId());
		checkoutConsigneeDetailsImpl.setBillConsigneeJson(
			getBillConsigneeJson());
		checkoutConsigneeDetailsImpl.setBillConsigneeAddressId(
			getBillConsigneeAddressId());
		checkoutConsigneeDetailsImpl.setBillConsigneeAddressJson(
			getBillConsigneeAddressJson());
		checkoutConsigneeDetailsImpl.setQuantity(getQuantity());

		checkoutConsigneeDetailsImpl.resetOriginalValues();

		return checkoutConsigneeDetailsImpl;
	}

	@Override
	public CheckoutConsigneeDetails cloneWithOriginalValues() {
		CheckoutConsigneeDetailsImpl checkoutConsigneeDetailsImpl =
			new CheckoutConsigneeDetailsImpl();

		checkoutConsigneeDetailsImpl.setUuid(
			this.<String>getColumnOriginalValue("uuid_"));
		checkoutConsigneeDetailsImpl.setCheckoutConsigneeId(
			this.<Long>getColumnOriginalValue("checkoutConsigneeId"));
		checkoutConsigneeDetailsImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		checkoutConsigneeDetailsImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		checkoutConsigneeDetailsImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		checkoutConsigneeDetailsImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		checkoutConsigneeDetailsImpl.setCreatedBy(
			this.<Long>getColumnOriginalValue("createdBy"));
		checkoutConsigneeDetailsImpl.setModifiedBy(
			this.<Long>getColumnOriginalValue("modifiedBy"));
		checkoutConsigneeDetailsImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		checkoutConsigneeDetailsImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		checkoutConsigneeDetailsImpl.setParentCartId(
			this.<Long>getColumnOriginalValue("parentCartId"));
		checkoutConsigneeDetailsImpl.setOrderItemId(
			this.<Long>getColumnOriginalValue("orderItemId"));
		checkoutConsigneeDetailsImpl.setShippingConsigneeId(
			this.<String>getColumnOriginalValue("shippingConsigneeId"));
		checkoutConsigneeDetailsImpl.setShipConsigneeJson(
			this.<String>getColumnOriginalValue("shipConsigneeJson"));
		checkoutConsigneeDetailsImpl.setShipConsigneeAddressID(
			this.<String>getColumnOriginalValue("shipConsigneeAddressID"));
		checkoutConsigneeDetailsImpl.setShipConsigneeAddressJson(
			this.<String>getColumnOriginalValue("shipConsigneeAddressJson"));
		checkoutConsigneeDetailsImpl.setBillingConsigneeId(
			this.<String>getColumnOriginalValue("billingConsigneeId"));
		checkoutConsigneeDetailsImpl.setBillConsigneeJson(
			this.<String>getColumnOriginalValue("billConsigneeJson"));
		checkoutConsigneeDetailsImpl.setBillConsigneeAddressId(
			this.<String>getColumnOriginalValue("billConsigneeAddressId"));
		checkoutConsigneeDetailsImpl.setBillConsigneeAddressJson(
			this.<String>getColumnOriginalValue("billConsigneeAddressJson"));
		checkoutConsigneeDetailsImpl.setQuantity(
			this.<Long>getColumnOriginalValue("quantity"));

		return checkoutConsigneeDetailsImpl;
	}

	@Override
	public int compareTo(CheckoutConsigneeDetails checkoutConsigneeDetails) {
		long primaryKey = checkoutConsigneeDetails.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof CheckoutConsigneeDetails)) {
			return false;
		}

		CheckoutConsigneeDetails checkoutConsigneeDetails =
			(CheckoutConsigneeDetails)object;

		long primaryKey = checkoutConsigneeDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<CheckoutConsigneeDetails> toCacheModel() {
		CheckoutConsigneeDetailsCacheModel checkoutConsigneeDetailsCacheModel =
			new CheckoutConsigneeDetailsCacheModel();

		checkoutConsigneeDetailsCacheModel.uuid = getUuid();

		String uuid = checkoutConsigneeDetailsCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			checkoutConsigneeDetailsCacheModel.uuid = null;
		}

		checkoutConsigneeDetailsCacheModel.checkoutConsigneeId =
			getCheckoutConsigneeId();

		checkoutConsigneeDetailsCacheModel.groupId = getGroupId();

		checkoutConsigneeDetailsCacheModel.companyId = getCompanyId();

		checkoutConsigneeDetailsCacheModel.userId = getUserId();

		checkoutConsigneeDetailsCacheModel.userName = getUserName();

		String userName = checkoutConsigneeDetailsCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			checkoutConsigneeDetailsCacheModel.userName = null;
		}

		checkoutConsigneeDetailsCacheModel.createdBy = getCreatedBy();

		checkoutConsigneeDetailsCacheModel.modifiedBy = getModifiedBy();

		Date createDate = getCreateDate();

		if (createDate != null) {
			checkoutConsigneeDetailsCacheModel.createDate =
				createDate.getTime();
		}
		else {
			checkoutConsigneeDetailsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			checkoutConsigneeDetailsCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			checkoutConsigneeDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		checkoutConsigneeDetailsCacheModel.parentCartId = getParentCartId();

		checkoutConsigneeDetailsCacheModel.orderItemId = getOrderItemId();

		checkoutConsigneeDetailsCacheModel.shippingConsigneeId =
			getShippingConsigneeId();

		String shippingConsigneeId =
			checkoutConsigneeDetailsCacheModel.shippingConsigneeId;

		if ((shippingConsigneeId != null) &&
			(shippingConsigneeId.length() == 0)) {

			checkoutConsigneeDetailsCacheModel.shippingConsigneeId = null;
		}

		checkoutConsigneeDetailsCacheModel.shipConsigneeJson =
			getShipConsigneeJson();

		String shipConsigneeJson =
			checkoutConsigneeDetailsCacheModel.shipConsigneeJson;

		if ((shipConsigneeJson != null) && (shipConsigneeJson.length() == 0)) {
			checkoutConsigneeDetailsCacheModel.shipConsigneeJson = null;
		}

		checkoutConsigneeDetailsCacheModel.shipConsigneeAddressID =
			getShipConsigneeAddressID();

		String shipConsigneeAddressID =
			checkoutConsigneeDetailsCacheModel.shipConsigneeAddressID;

		if ((shipConsigneeAddressID != null) &&
			(shipConsigneeAddressID.length() == 0)) {

			checkoutConsigneeDetailsCacheModel.shipConsigneeAddressID = null;
		}

		checkoutConsigneeDetailsCacheModel.shipConsigneeAddressJson =
			getShipConsigneeAddressJson();

		String shipConsigneeAddressJson =
			checkoutConsigneeDetailsCacheModel.shipConsigneeAddressJson;

		if ((shipConsigneeAddressJson != null) &&
			(shipConsigneeAddressJson.length() == 0)) {

			checkoutConsigneeDetailsCacheModel.shipConsigneeAddressJson = null;
		}

		checkoutConsigneeDetailsCacheModel.billingConsigneeId =
			getBillingConsigneeId();

		String billingConsigneeId =
			checkoutConsigneeDetailsCacheModel.billingConsigneeId;

		if ((billingConsigneeId != null) &&
			(billingConsigneeId.length() == 0)) {

			checkoutConsigneeDetailsCacheModel.billingConsigneeId = null;
		}

		checkoutConsigneeDetailsCacheModel.billConsigneeJson =
			getBillConsigneeJson();

		String billConsigneeJson =
			checkoutConsigneeDetailsCacheModel.billConsigneeJson;

		if ((billConsigneeJson != null) && (billConsigneeJson.length() == 0)) {
			checkoutConsigneeDetailsCacheModel.billConsigneeJson = null;
		}

		checkoutConsigneeDetailsCacheModel.billConsigneeAddressId =
			getBillConsigneeAddressId();

		String billConsigneeAddressId =
			checkoutConsigneeDetailsCacheModel.billConsigneeAddressId;

		if ((billConsigneeAddressId != null) &&
			(billConsigneeAddressId.length() == 0)) {

			checkoutConsigneeDetailsCacheModel.billConsigneeAddressId = null;
		}

		checkoutConsigneeDetailsCacheModel.billConsigneeAddressJson =
			getBillConsigneeAddressJson();

		String billConsigneeAddressJson =
			checkoutConsigneeDetailsCacheModel.billConsigneeAddressJson;

		if ((billConsigneeAddressJson != null) &&
			(billConsigneeAddressJson.length() == 0)) {

			checkoutConsigneeDetailsCacheModel.billConsigneeAddressJson = null;
		}

		checkoutConsigneeDetailsCacheModel.quantity = getQuantity();

		return checkoutConsigneeDetailsCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<CheckoutConsigneeDetails, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<CheckoutConsigneeDetails, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CheckoutConsigneeDetails, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(CheckoutConsigneeDetails)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, CheckoutConsigneeDetails>
				_escapedModelProxyProviderFunction =
					ProxyUtil.getProxyProviderFunction(
						CheckoutConsigneeDetails.class, ModelWrapper.class);

	}

	private String _uuid;
	private long _checkoutConsigneeId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private long _createdBy;
	private long _modifiedBy;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _parentCartId;
	private long _orderItemId;
	private String _shippingConsigneeId;
	private String _shipConsigneeJson;
	private String _shipConsigneeAddressID;
	private String _shipConsigneeAddressJson;
	private String _billingConsigneeId;
	private String _billConsigneeJson;
	private String _billConsigneeAddressId;
	private String _billConsigneeAddressJson;
	private long _quantity;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<CheckoutConsigneeDetails, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((CheckoutConsigneeDetails)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("checkoutConsigneeId", _checkoutConsigneeId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createdBy", _createdBy);
		_columnOriginalValues.put("modifiedBy", _modifiedBy);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("parentCartId", _parentCartId);
		_columnOriginalValues.put("orderItemId", _orderItemId);
		_columnOriginalValues.put("shippingConsigneeId", _shippingConsigneeId);
		_columnOriginalValues.put("shipConsigneeJson", _shipConsigneeJson);
		_columnOriginalValues.put(
			"shipConsigneeAddressID", _shipConsigneeAddressID);
		_columnOriginalValues.put(
			"shipConsigneeAddressJson", _shipConsigneeAddressJson);
		_columnOriginalValues.put("billingConsigneeId", _billingConsigneeId);
		_columnOriginalValues.put("billConsigneeJson", _billConsigneeJson);
		_columnOriginalValues.put(
			"billConsigneeAddressId", _billConsigneeAddressId);
		_columnOriginalValues.put(
			"billConsigneeAddressJson", _billConsigneeAddressJson);
		_columnOriginalValues.put("quantity", _quantity);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("checkoutConsigneeId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("companyId", 8L);

		columnBitmasks.put("userId", 16L);

		columnBitmasks.put("userName", 32L);

		columnBitmasks.put("createdBy", 64L);

		columnBitmasks.put("modifiedBy", 128L);

		columnBitmasks.put("createDate", 256L);

		columnBitmasks.put("modifiedDate", 512L);

		columnBitmasks.put("parentCartId", 1024L);

		columnBitmasks.put("orderItemId", 2048L);

		columnBitmasks.put("shippingConsigneeId", 4096L);

		columnBitmasks.put("shipConsigneeJson", 8192L);

		columnBitmasks.put("shipConsigneeAddressID", 16384L);

		columnBitmasks.put("shipConsigneeAddressJson", 32768L);

		columnBitmasks.put("billingConsigneeId", 65536L);

		columnBitmasks.put("billConsigneeJson", 131072L);

		columnBitmasks.put("billConsigneeAddressId", 262144L);

		columnBitmasks.put("billConsigneeAddressJson", 524288L);

		columnBitmasks.put("quantity", 1048576L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private CheckoutConsigneeDetails _escapedModel;

}