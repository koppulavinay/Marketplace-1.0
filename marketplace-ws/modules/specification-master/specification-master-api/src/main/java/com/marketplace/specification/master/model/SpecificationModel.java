/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.marketplace.specification.master.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Specification service. Represents a row in the &quot;marketplace_specification&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.marketplace.specification.master.model.impl.SpecificationModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.marketplace.specification.master.model.impl.SpecificationImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Specification
 * @generated
 */
@ProviderType
public interface SpecificationModel
	extends BaseModel<Specification>, GroupedModel, ShardedModel,
			StagedAuditedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a specification model instance should use the {@link Specification} interface instead.
	 */

	/**
	 * Returns the primary key of this specification.
	 *
	 * @return the primary key of this specification
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this specification.
	 *
	 * @param primaryKey the primary key of this specification
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this specification.
	 *
	 * @return the uuid of this specification
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this specification.
	 *
	 * @param uuid the uuid of this specification
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the specification ID of this specification.
	 *
	 * @return the specification ID of this specification
	 */
	public long getSpecificationId();

	/**
	 * Sets the specification ID of this specification.
	 *
	 * @param specificationId the specification ID of this specification
	 */
	public void setSpecificationId(long specificationId);

	/**
	 * Returns the group ID of this specification.
	 *
	 * @return the group ID of this specification
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this specification.
	 *
	 * @param groupId the group ID of this specification
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the specification label of this specification.
	 *
	 * @return the specification label of this specification
	 */
	@AutoEscape
	public String getSpecificationLabel();

	/**
	 * Sets the specification label of this specification.
	 *
	 * @param specificationLabel the specification label of this specification
	 */
	public void setSpecificationLabel(String specificationLabel);

	/**
	 * Returns the specification description of this specification.
	 *
	 * @return the specification description of this specification
	 */
	@AutoEscape
	public String getSpecificationDescription();

	/**
	 * Sets the specification description of this specification.
	 *
	 * @param specificationDescription the specification description of this specification
	 */
	public void setSpecificationDescription(String specificationDescription);

	/**
	 * Returns the specification field type of this specification.
	 *
	 * @return the specification field type of this specification
	 */
	public long getSpecificationFieldType();

	/**
	 * Sets the specification field type of this specification.
	 *
	 * @param specificationFieldType the specification field type of this specification
	 */
	public void setSpecificationFieldType(long specificationFieldType);

	/**
	 * Returns the specification field data type of this specification.
	 *
	 * @return the specification field data type of this specification
	 */
	public long getSpecificationFieldDataType();

	/**
	 * Sets the specification field data type of this specification.
	 *
	 * @param specificationFieldDataType the specification field data type of this specification
	 */
	public void setSpecificationFieldDataType(long specificationFieldDataType);

	/**
	 * Returns the specification priority of this specification.
	 *
	 * @return the specification priority of this specification
	 */
	public long getSpecificationPriority();

	/**
	 * Sets the specification priority of this specification.
	 *
	 * @param specificationPriority the specification priority of this specification
	 */
	public void setSpecificationPriority(long specificationPriority);

	/**
	 * Returns the is variant of this specification.
	 *
	 * @return the is variant of this specification
	 */
	public boolean getIsVariant();

	/**
	 * Returns <code>true</code> if this specification is is variant.
	 *
	 * @return <code>true</code> if this specification is is variant; <code>false</code> otherwise
	 */
	public boolean isIsVariant();

	/**
	 * Sets whether this specification is is variant.
	 *
	 * @param isVariant the is variant of this specification
	 */
	public void setIsVariant(boolean isVariant);

	/**
	 * Returns the specification group ID of this specification.
	 *
	 * @return the specification group ID of this specification
	 */
	public long getSpecificationGroupId();

	/**
	 * Sets the specification group ID of this specification.
	 *
	 * @param specificationGroupId the specification group ID of this specification
	 */
	public void setSpecificationGroupId(long specificationGroupId);

	/**
	 * Returns the cp specification ID of this specification.
	 *
	 * @return the cp specification ID of this specification
	 */
	public long getCpSpecificationId();

	/**
	 * Sets the cp specification ID of this specification.
	 *
	 * @param cpSpecificationId the cp specification ID of this specification
	 */
	public void setCpSpecificationId(long cpSpecificationId);

	/**
	 * Returns the specification status of this specification.
	 *
	 * @return the specification status of this specification
	 */
	@AutoEscape
	public String getSpecificationStatus();

	/**
	 * Sets the specification status of this specification.
	 *
	 * @param specificationStatus the specification status of this specification
	 */
	public void setSpecificationStatus(String specificationStatus);

	/**
	 * Returns the ip address of this specification.
	 *
	 * @return the ip address of this specification
	 */
	@AutoEscape
	public String getIpAddress();

	/**
	 * Sets the ip address of this specification.
	 *
	 * @param ipAddress the ip address of this specification
	 */
	public void setIpAddress(String ipAddress);

	/**
	 * Returns the company ID of this specification.
	 *
	 * @return the company ID of this specification
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this specification.
	 *
	 * @param companyId the company ID of this specification
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this specification.
	 *
	 * @return the user ID of this specification
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this specification.
	 *
	 * @param userId the user ID of this specification
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this specification.
	 *
	 * @return the user uuid of this specification
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this specification.
	 *
	 * @param userUuid the user uuid of this specification
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this specification.
	 *
	 * @return the user name of this specification
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this specification.
	 *
	 * @param userName the user name of this specification
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this specification.
	 *
	 * @return the create date of this specification
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this specification.
	 *
	 * @param createDate the create date of this specification
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this specification.
	 *
	 * @return the modified date of this specification
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this specification.
	 *
	 * @param modifiedDate the modified date of this specification
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the created by of this specification.
	 *
	 * @return the created by of this specification
	 */
	public long getCreatedBy();

	/**
	 * Sets the created by of this specification.
	 *
	 * @param createdBy the created by of this specification
	 */
	public void setCreatedBy(long createdBy);

	/**
	 * Returns the modified by of this specification.
	 *
	 * @return the modified by of this specification
	 */
	public long getModifiedBy();

	/**
	 * Sets the modified by of this specification.
	 *
	 * @param modifiedBy the modified by of this specification
	 */
	public void setModifiedBy(long modifiedBy);

	@Override
	public Specification cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}